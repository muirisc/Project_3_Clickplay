{"ast":null,"code":"var _jsxFileName = \"/Users/mikevanaman/Documents/GitHub/Project_3_Clickplay/Front-End/src/Components/Filter_Components/FilterSearch.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport GameCard from \"../GameCard\";\nimport GameList from \"../GameList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction GameSearch(_ref) {\n  _s();\n\n  let {\n    games\n  } = _ref;\n  const [gameView, setGameView] = useState(false);\n  const [gameViewed, setGameViewed] = useState([]);\n\n  function toggleGameView(game) {\n    setGameView(!gameView);\n    setGameViewed(games);\n    console.log(game);\n  }\n\n  function toggleGameList() {\n    setGameView(!gameView);\n    setGameViewed([]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"gamefound\",\n        children: \" Games Found: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resultBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"gamesListed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), gameView ? /*#__PURE__*/_jsxDEV(GameCard, {\n          game: gameViewed,\n          toggleGameList: toggleGameList\n        }, gameViewed.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this) : games.map(game => {\n          return /*#__PURE__*/_jsxDEV(GameList, {\n            game: game,\n            toggleGameView: toggleGameView\n          }, game.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 19\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(GameSearch, \"Ieovb2ouT+gHarbjRrZ6A5rUX9w=\");\n\n_c = GameSearch;\nexport default GameSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameSearch\");","map":{"version":3,"sources":["/Users/mikevanaman/Documents/GitHub/Project_3_Clickplay/Front-End/src/Components/Filter_Components/FilterSearch.js"],"names":["useEffect","useState","GameCard","GameList","GameSearch","games","gameView","setGameView","gameViewed","setGameViewed","toggleGameView","game","console","log","toggleGameList","id","map"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,QAAP,MAAqB,aAArB;;;;AAEA,SAASC,UAAT,OAA8B;AAAA;;AAAA,MAAT;AAACC,IAAAA;AAAD,GAAS;AAC5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;;AAIA,WAASS,cAAT,CAAwBC,IAAxB,EAA8B;AAC5BJ,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACAG,IAAAA,aAAa,CAACJ,KAAD,CAAb;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD;;AAED,WAASG,cAAT,GAAyB;AACvBP,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACAG,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD;;AAED,sBACE;AAAA,2BACE;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,gBADF,EAGGH,QAAQ,gBAEH,QAAC,QAAD;AAA8B,UAAA,IAAI,EAAEE,UAApC;AAAgD,UAAA,cAAc,EAAEM;AAAhE,WAAeN,UAAU,CAACO,EAA1B;AAAA;AAAA;AAAA;AAAA,gBAFG,GAILV,KAAK,CAACW,GAAN,CAAWL,IAAD,IAAU;AAClB,8BACE,QAAC,QAAD;AAEE,YAAA,IAAI,EAAEA,IAFR;AAGE,YAAA,cAAc,EAAED;AAHlB,aACOC,IAAI,CAACI,EADZ;AAAA;AAAA;AAAA;AAAA,kBADF;AAOD,SARD,CAPN;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAwBD;;GAzCQX,U;;KAAAA,U;AA2CT,eAAeA,UAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport GameCard from \"../GameCard\";\nimport GameList from \"../GameList\";\n\nfunction GameSearch( {games}) {\n  const [gameView, setGameView] = useState(false);\n  const [gameViewed, setGameViewed] = useState([]);\n\n\n\n  function toggleGameView(game) {\n    setGameView(!gameView);\n    setGameViewed(games);\n    console.log(game)\n  }\n\n  function toggleGameList(){\n    setGameView(!gameView)\n    setGameViewed([])\n  }\n\n  return (\n    <>\n      <div>\n        <h2 className=\"gamefound\"> Games Found: </h2>\n        <div className=\"resultBox\">\n          <ul className=\"gamesListed\"></ul>\n\n          {gameView\n            ? \n                <GameCard key={gameViewed.id} game={gameViewed} toggleGameList={toggleGameList}/>\n              \n            : games.map((game) => {\n                return (\n                  <GameList\n                    key={game.id}\n                    game={game}\n                    toggleGameView={toggleGameView}\n                  />\n                );\n              })}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default GameSearch;\n"]},"metadata":{},"sourceType":"module"}